{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "MicrosoftKeyVault_vaults_Arguments": {
            "metadata": {
                "description": [
                    "Arm_ResourceName: The name of the Key Vault resource to create. The name must be unique to the entire Azure Cloud (globally) you are deploying to. Check details for 'Microsoft.KeyVault/vaults' at https://learn.microsoft.com/azure/azure-resource-manager/management/resource-name-rules#microsoftkeyvault."
                ]
            },
            "value": {
                "Arm_ResourceName": null,
                "byEnvironment": {
                    "$metadata": {
                        "description": [
                            "NetworkAcls_IpRules: The array of IP rules to allow access to the Key Vault. By default, this will allow access from the Azure Cloud. These are Client IP address CIDR expressions (IPv4 or IPv6) to allow access to the application. Default = '' (empty string); If empty, access will be allowed from anywhere. NOTE: This needs to be a valid IP address (it is automatically supplied by the PowerShell script). If you want to allow access from anywhere, use '*' (asterisk). Values from the 'ALL' property will be used if no environment-specific value is provided. If values are provided in both the 'ALL' and environment-specific properties, only the environment-specific values will be used; the values are not combined.",
                            "Arm_AdministratorObjectId: The object ID of the user or service principal that will have been assigned the 'Owner' role on the resource group and will be granted all access to the Key Vault. This value can be obtained from the Azure Portal, or by running the following PowerShell command: \"Get-AzADUser -UserPrincipalName <user principal name> | Select-Object -Property Id\". NOTE: Normally leave this as an empty string. The PowerShell script will fill in the value for the current user dynamically at runtime when deploying. NOTE: This is UNUSUAL in that a setting here will be used instead of a value supplied by PowerShell, assuming you use the REDCap.psm1 module to deploy this."
                        ]
                    },
                    "ALL": {
                        "Arm_Location": "eastus",
                        "Arm_AdministratorObjectId": null,
                        "NetworkAcls_IpRules": [
                            {
                                "value": null
                            }
                        ]
                    },
                    "dev": {
                        "NetworkAcls_IpRules": [
                            {
                                "value": null
                            }
                        ]
                    },
                    "stage": {
                        "NetworkAcls_IpRules": [
                            {
                                "value": null
                            }
                        ]
                    },
                    "prod": {
                        "NetworkAcls_IpRules": [
                            {
                                "value": null
                            }
                        ]
                    }
                }
            }
        },
        "MicrosoftKeyVault_vaults_SecureArguments": {
            "metadata": {
                "description": [
                    "These values are not stored in the ARM template, but are instead stored in the Azure Key Vault. The values are retrieved from the Key Vault at runtime when the ARM template is deployed. They are initialized to null here, but will be populated by the PowerShell script at runtime."
                ],
                "secure": true
            },
            "value": {
                "MicrosoftDBforMySQLAdministratorLoginPassword": null,
                "ProjectREDCapCommunityPassword": null,
                "SmtpUserPassword": null
            }
        }
    }
}