@page
@using System
@using System.Linq
@using System.Security.Cryptography.X509Certificates
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>


string value = "not set";

string certThumbprint = "94A3D165F2AA76ED59006C5588AB2D70507A292D";
bool validOnly = false;

using (X509Store certStore = new X509Store(StoreName.My, StoreLocation.CurrentUser))
{
  certStore.Open(OpenFlags.ReadOnly);

  X509Certificate2Collection certCollection = certStore.Certificates.Find(
                              X509FindType.FindByThumbprint,
                              // Replace below with your certificate's thumbprint
                              certThumbprint,
                              validOnly);
  // Get the first cert with the thumbprint
  using (X509Certificate2 cert = certCollection.OfType<X509Certificate2>().FirstOrDefault())
    {

  if (cert == null)
  {
      throw new Exception("Certificate with thumbprint " + certThumbprint + " was not found");
  }

  // Use certificate
  Console.WriteLine(cert.FriendlyName);
  value = cert.ToString();
  
  // Consider to call Dispose() on the certificate after it's being used, avaliable in .NET 4.6 and later
  }
}